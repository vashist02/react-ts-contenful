@import 'functions';
@import 'variables';

/* Flexbox */
@mixin display-flex($justify: false, $align: false, $flex-direction: false) {
  display: flex;

  @if $justify {
    justify-content: $justify;
  }

  @if $align {
    align-items: $align;
  }

  @if $flex-direction {
    flex-direction: $flex-direction;
  }
}

/* Grid */
@mixin display-grid($template: false, $template-areas: false, $area: false) {
  display: -ms-grid;
  display: grid;
  @if $template {
    grid-template-columns: ($template);
  }
  @if $template-areas {
    grid-template-areas: $template-areas;
  }
  @if $area {
    grid-area: $area;
  }
}

/* Fonts */
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/* Box Shadow */
@mixin box-shadow($shadow) {
  box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
}

/* Media Breakpoints */

// @media(min-width: '')
@mixin respond-above($breakpoint) {
  @if map-has-key($map: $breakpoints, $key: $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// @media(max-width: '')
@mixin respond-below($breakpoint) {
  @if map-has-key($map: $breakpoints, $key: $breakpoint) {
    $breakpoint-value: map-get(
      $map: $breakpoints,
      $key: $breakpoint,
    );

    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// @media (min-width: '') and (max-width: '')
@mixin respond-between($lower, $upper) {
  @if map-has-key($map: $breakpoints, $key: $lower) and
    map-has-key($map: $breakpoints, $key: $upper)
  {
    $lower-breakpoint: map-get(
      $map: $breakpoints,
      $key: $lower,
    );
    $upper-breakpoint: map-get(
      $map: $breakpoints,
      $key: $upper,
    );

    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }
  } @else {
    @if (map-has-key($map: $breakpoints, $key: $lower) ==false) {
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    @if (map-has-key($map: $breakpoints, $key: $upper) ==false) {
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}
